ylab("Relative abundance (%)")+
#facet_wrap(~BphageFamMT$Continent, scales="free_x")+
theme(
strip.background = element_rect(
color="white", fill="white", size=1, linetype="solid"),
strip.text.x = element_text(size = 12)
)
BPh.FEV1
BPh.FEV1<-ggplot(data=BphageFam[which(BphageFam$Matching=="Matched" && is.na(BphageFam$FEVfactor) = FALSE),],aes(x=FEVfactor, y=RPKM, fill=Virome))+
BPh.FEV1
BPh.FEV1<-ggplot(data=BphageFam[which(BphageFam$Matching=="Matched" & is.na(BphageFam$FEVfactor) = FALSE),],aes(x=FEVfactor, y=RPKM, fill=Virome))+
BPh.FEV1
BPh.FEV1<-ggplot(data=BphageFam[which(BphageFam$Matching=="Matched" & is.na(BphageFam$FEVfactor) == FALSE),],aes(x=FEVfactor, y=RPKM, fill=Virome))+
geom_bar(aes(), stat="identity", position = "fill") +
scale_fill_manual(values = c("#EBA5F3","#5CA5DB","#a3d9d2","#97809e","#eed799","#C6DFA6","#e3ce81","#026EB8","#06A955","#5D2E83","#2A2A73","#fc8403","#fc5017","#db6960","#B60004","#91CE59","#FFBC06","#3B3B3B","#026EB8","#06A955","#ffcccc","#2A2A73"))+
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(labels = c('>70%','50-70%','30-50%','<30%'))+
theme(legend.position="none",
#axis.text=element_blank(),
axis.title=element_blank(),
#axis.title=element_text(size=14),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.5, colour = "black"),
legend.title = element_blank(),
legend.text = element_text(face = "italic"))+
guides(fill=guide_legend(nrow=2), size = .1)+
xlab("")+
ylab("Relative abundance (%)")+
#facet_wrap(~BphageFamMT$Continent, scales="free_x")+
theme(
strip.background = element_rect(
color="white", fill="white", size=1, linetype="solid"),
strip.text.x = element_text(size = 12)
)
BPh.FEV1
BPh.FEV1<-ggplot(data=BphageFam[which(BphageFam$Matching=="Matched" & is.na(BphageFam$FEVfactor) == FALSE),],aes(x=FEVfactor, y=RPKM, fill=Virome))+
geom_bar(aes(), stat="identity", position = "fill") +
scale_fill_manual(values = c("#EBA5F3","#5CA5DB","#a3d9d2","#97809e","#eed799","#C6DFA6","#e3ce81","#026EB8","#06A955","#5D2E83","#2A2A73","#fc8403","#fc5017","#db6960","#B60004","#91CE59","#FFBC06","#3B3B3B","#026EB8","#06A955","#ffcccc","#2A2A73"))+
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(labels = c('>70%','50-70%','30-50%','<30%'))+
theme(legend.position="none",
#axis.text=element_blank(),
axis.title=element_blank(),
#axis.title=element_text(size=14),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.5, colour = "black"),
legend.title = element_blank(),
legend.text = element_text(face = "italic"))+
guides(fill=guide_legend(nrow=2), size = .1)+
xlab("")+
ylab("Relative abundance (%)")+
#facet_wrap(~BphageFamMT$Continent, scales="free_x")+
theme(
strip.background = element_rect(
color="white", fill="white", size=1, linetype="solid"),
#strip.text.x = element_text(size = 12)
)
BPh.FEV1
BPh.FEV1<-ggplot(data=BphageFam[which(BphageFam$Matching=="Matched" & is.na(BphageFam$FEVfactor) == FALSE),],aes(x=FEVfactor, y=RPKM, fill=Virome))+
geom_bar(aes(), stat="identity", position = "fill") +
scale_fill_manual(values = c("#EBA5F3","#5CA5DB","#a3d9d2","#97809e","#eed799","#C6DFA6","#e3ce81","#026EB8","#06A955","#5D2E83","#2A2A73","#fc8403","#fc5017","#db6960","#B60004","#91CE59","#FFBC06","#3B3B3B","#026EB8","#06A955","#ffcccc","#2A2A73"))+
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(labels = c('>70%','50-70%','30-50%','<30%'))+
theme(legend.position="none",
#axis.text=element_blank(),
#axis.title=element_blank(),
#axis.title=element_text(size=14),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.5, colour = "black"),
legend.title = element_blank(),
legend.text = element_text(face = "italic"))+
guides(fill=guide_legend(nrow=2), size = .1)+
xlab("")+
ylab("Relative abundance (%)")+
#facet_wrap(~BphageFamMT$Continent, scales="free_x")+
theme(
strip.background = element_rect(
color="white", fill="white", size=1, linetype="solid"),
strip.text.x = element_text(size = 12)
)
BPh.FEV1
BPh.FEV1<-ggplot(data=BphageFam[which(BphageFam$Matching=="Matched" & is.na(BphageFam$FEVfactor) == FALSE),],aes(x=FEVfactor, y=RPKM, fill=Virome))+
geom_bar(aes(), stat="identity", position = "fill") +
scale_fill_manual(values = c("#EBA5F3","#5CA5DB","#a3d9d2","#97809e","#eed799","#C6DFA6","#e3ce81","#026EB8","#06A955","#5D2E83","#2A2A73","#fc8403","#fc5017","#db6960","#B60004","#91CE59","#FFBC06","#3B3B3B","#026EB8","#06A955","#ffcccc","#2A2A73"))+
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(labels = c('>70%','50-70%','30-50%','<30%'))+
theme(legend.position="none",
#axis.text=element_blank(),
#axis.title=element_blank(),
#axis.title=element_text(size=14),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.5, colour = "black"),
legend.title = element_blank(),
legend.text = element_text(face = "italic"))+
guides(fill=guide_legend(nrow=2), size = .1)+
xlab("FEV1 (% predicted)")+
ylab("Relative abundance (%)")+
#facet_wrap(~BphageFamMT$Continent, scales="free_x")+
theme(
strip.background = element_rect(
color="white", fill="white", size=1, linetype="solid"),
strip.text.x = element_text(size = 12)
)
BPh.FEV1
BPh.FEV1<-ggplot(data=BphageFam[which(BphageFam$Matching=="Matched"),],aes(x=Severity, y=RPKM, fill=Virome))+
geom_bar(aes(), stat="identity", position = "fill") +
scale_fill_manual(values = c("#EBA5F3","#5CA5DB","#a3d9d2","#97809e","#eed799","#C6DFA6","#e3ce81","#026EB8","#06A955","#5D2E83","#2A2A73","#fc8403","#fc5017","#db6960","#B60004","#91CE59","#FFBC06","#3B3B3B","#026EB8","#06A955","#ffcccc","#2A2A73"))+
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(labels = c('>70%','50-70%','30-50%','<30%'))+
theme(legend.position="none",
#axis.text=element_blank(),
#axis.title=element_blank(),
#axis.title=element_text(size=14),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.5, colour = "black"),
legend.title = element_blank(),
legend.text = element_text(face = "italic"))+
guides(fill=guide_legend(nrow=2), size = .1)+
xlab("FEV1 (% predicted)")+
ylab("Relative abundance (%)")+
#facet_wrap(~BphageFamMT$Continent, scales="free_x")+
theme(
strip.background = element_rect(
color="white", fill="white", size=1, linetype="solid"),
strip.text.x = element_text(size = 12)
)
BPh.FEV1
BPh.FEV1<-ggplot(data=BphageFam[which(BphageFam$Matching=="Matched"),],aes(x=Severity, y=RPKM, fill=Virome))+
geom_bar(aes(), stat="identity", position = "fill") +
scale_fill_manual(values = c("#EBA5F3","#5CA5DB","#a3d9d2","#97809e","#eed799","#C6DFA6","#e3ce81","#026EB8","#06A955","#5D2E83","#2A2A73","#fc8403","#fc5017","#db6960","#B60004","#91CE59","#FFBC06","#3B3B3B","#026EB8","#06A955","#ffcccc","#2A2A73"))+
scale_y_continuous(labels = scales::percent)+
theme(legend.position="none",
#axis.text=element_blank(),
#axis.title=element_blank(),
#axis.title=element_text(size=14),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.5, colour = "black"),
legend.title = element_blank(),
legend.text = element_text(face = "italic"))+
guides(fill=guide_legend(nrow=2), size = .1)+
xlab("FEV1 (% predicted)")+
ylab("Relative abundance (%)")+
#facet_wrap(~BphageFamMT$Continent, scales="free_x")+
theme(
strip.background = element_rect(
color="white", fill="white", size=1, linetype="solid"),
strip.text.x = element_text(size = 12)
)
BPh.Severity<-ggplot(data=BphageFam[which(BphageFam$Matching=="Matched"),],aes(x=Severity, y=RPKM, fill=Virome))+
geom_bar(aes(), stat="identity", position = "fill") +
scale_fill_manual(values = c("#EBA5F3","#5CA5DB","#a3d9d2","#97809e","#eed799","#C6DFA6","#e3ce81","#026EB8","#06A955","#5D2E83","#2A2A73","#fc8403","#fc5017","#db6960","#B60004","#91CE59","#FFBC06","#3B3B3B","#026EB8","#06A955","#ffcccc","#2A2A73"))+
scale_y_continuous(labels = scales::percent)+
theme(legend.position="none",
#axis.text=element_blank(),
#axis.title=element_blank(),
#axis.title=element_text(size=14),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.5, colour = "black"),
legend.title = element_blank(),
legend.text = element_text(face = "italic"))+
guides(fill=guide_legend(nrow=2), size = .1)+
xlab("FEV1 (% predicted)")+
ylab("Relative abundance (%)")+
#facet_wrap(~BphageFamMT$Continent, scales="free_x")+
theme(
strip.background = element_rect(
color="white", fill="white", size=1, linetype="solid"),
strip.text.x = element_text(size = 12)
)
BPh.Severity
BPh.Severity<-ggplot(data=BphageFam[which(BphageFam$Matching=="Matched"),],aes(x=Severity, y=RPKM, fill=Virome))+
geom_bar(aes(), stat="identity", position = "fill") +
scale_fill_manual(values = c("#EBA5F3","#5CA5DB","#a3d9d2","#97809e","#eed799","#C6DFA6","#e3ce81","#026EB8","#06A955","#5D2E83","#2A2A73","#fc8403","#fc5017","#db6960","#B60004","#91CE59","#FFBC06","#3B3B3B","#026EB8","#06A955","#ffcccc","#2A2A73"))+
scale_y_continuous(labels = scales::percent)+
theme(legend.position="none",
#axis.text=element_blank(),
#axis.title=element_blank(),
#axis.title=element_text(size=14),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.5, colour = "black"),
legend.title = element_blank(),
legend.text = element_text(face = "italic"))+
guides(fill=guide_legend(nrow=2), size = .1)+
xlab("Severity")+
ylab("Relative abundance (%)")+
#facet_wrap(~BphageFamMT$Continent, scales="free_x")+
theme(
strip.background = element_rect(
color="white", fill="white", size=1, linetype="solid"),
strip.text.x = element_text(size = 12)
)
BPh.Severity
BPh.Severity<-ggplot(data=BphageFam[which(BphageFam$Matching=="Matched"),],aes(x=Severity, y=RPKM, fill=Virome))+
geom_bar(aes(), stat="identity", position = "fill") +
scale_fill_manual(values = c("#EBA5F3","#5CA5DB","#a3d9d2","#97809e","#eed799","#C6DFA6","#e3ce81","#026EB8","#06A955","#5D2E83","#2A2A73","#fc8403","#fc5017","#db6960","#B60004","#91CE59","#FFBC06","#3B3B3B","#026EB8","#06A955","#ffcccc","#2A2A73"))+
scale_y_continuous(labels = scales::percent)+
theme(legend.position="none",
#axis.text=element_blank(),
#axis.title=element_blank(),
#axis.title=element_text(size=14),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.5, colour = "black"),
legend.title = element_blank(),
legend.text = element_text(face = "italic"))+
guides(fill=guide_legend(nrow=2), size = .1)+
xlab("Disease severity (BSI)")+
ylab("Relative abundance (%)")+
#facet_wrap(~BphageFamMT$Continent, scales="free_x")+
theme(
strip.background = element_rect(
color="white", fill="white", size=1, linetype="solid"),
strip.text.x = element_text(size = 12)
)
BPh.Severity
BPh.Aet<-ggplot(data=BphageFam[which(BphageFam$Matching=="Matched"),],aes(x=Aetiology_short, y=RPKM, fill=Virome))+
geom_bar(aes(), stat="identity", position = "fill") +
scale_fill_manual(values = c("#EBA5F3","#5CA5DB","#a3d9d2","#97809e","#eed799","#C6DFA6","#e3ce81","#026EB8","#06A955","#5D2E83","#2A2A73","#fc8403","#fc5017","#db6960","#B60004","#91CE59","#FFBC06","#3B3B3B","#026EB8","#06A955","#ffcccc","#2A2A73"))+
scale_x_discrete(labels = c('IP','PI', 'PTB', "other"))+
scale_y_continuous(labels = scales::percent)+
theme(legend.position="none",
#axis.text=element_blank(),
#axis.title=element_blank(),
#axis.title=element_text(size=14),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.5, colour = "black"),
legend.title = element_blank(),
legend.text = element_text(face = "italic"))+
guides(fill=guide_legend(nrow=2), size = .1)+
xlab("Aetiology")+
ylab("Relative abundance (%)")+
#facet_wrap(~BphageFamMT$Continent, scales="free_x")+
theme(
strip.background = element_rect(
color="white", fill="white", size=1, linetype="solid"),
strip.text.x = element_text(size = 12)
)
BPh.Aet
BPh.Country<-ggplot(data=BphageFam[which(BphageFam$Matching=="Matched"),],aes(x=Country, y=RPKM, fill=Virome))+
geom_bar(aes(), stat="identity", position = "fill") +
scale_fill_manual(values = c("#EBA5F3","#5CA5DB","#a3d9d2","#97809e","#eed799","#C6DFA6","#e3ce81","#026EB8","#06A955","#5D2E83","#2A2A73","#fc8403","#fc5017","#db6960","#B60004","#91CE59","#FFBC06","#3B3B3B","#026EB8","#06A955","#ffcccc","#2A2A73"))+
scale_x_discrete(labels = c('IP','PI', 'PTB', "other"))+
scale_y_continuous(labels = scales::percent)+
theme(legend.position="none",
#axis.text=element_blank(),
#axis.title=element_blank(),
#axis.title=element_text(size=14),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.5, colour = "black"),
legend.title = element_blank(),
legend.text = element_text(face = "italic"))+
guides(fill=guide_legend(nrow=2), size = .1)+
xlab("Geographic origin")+
ylab("Relative abundance (%)")+
#facet_wrap(~BphageFamMT$Continent, scales="free_x")+
theme(
strip.background = element_rect(
color="white", fill="white", size=1, linetype="solid"),
strip.text.x = element_text(size = 12)
)
BPh.Country
BPh.Country<-ggplot(data=BphageFam[which(BphageFam$Matching=="Matched"),],aes(x=Country, y=RPKM, fill=Virome))+
geom_bar(aes(), stat="identity", position = "fill") +
scale_fill_manual(values = c("#EBA5F3","#5CA5DB","#a3d9d2","#97809e","#eed799","#C6DFA6","#e3ce81","#026EB8","#06A955","#5D2E83","#2A2A73","#fc8403","#fc5017","#db6960","#B60004","#91CE59","#FFBC06","#3B3B3B","#026EB8","#06A955","#ffcccc","#2A2A73"))+
scale_y_continuous(labels = scales::percent)+
theme(legend.position="none",
#axis.text=element_blank(),
#axis.title=element_blank(),
#axis.title=element_text(size=14),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.5, colour = "black"),
legend.title = element_blank(),
legend.text = element_text(face = "italic"))+
guides(fill=guide_legend(nrow=2), size = .1)+
xlab("Geographic origin")+
ylab("Relative abundance (%)")+
#facet_wrap(~BphageFamMT$Continent, scales="free_x")+
theme(
strip.background = element_rect(
color="white", fill="white", size=1, linetype="solid"),
strip.text.x = element_text(size = 12)
)
BPh.Country
#Fig. E5####
#Fig. E6####
##All####
Bacteriophages<-ggplot(data=BphageFam[which(BphageFam$Matching == "Matched"),],aes(x=SampleID, y=RPKM, fill=Virome))+
geom_bar(aes(), stat="identity", position = "fill") +
scale_fill_manual(values = c("#EBA5F3","#5CA5DB","#a3d9d2","#97809e","#eed799","#C6DFA6","#e3ce81","#026EB8","#06A955","#5D2E83","#2A2A73","#fc8403","#fc5017","#db6960","#B60004","#91CE59","#FFBC06","#3B3B3B","#026EB8","#06A955","#ffcccc","#2A2A73"))+
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(labels = c('IP','PI', 'PTB', "other"))+
theme(legend.position="bottom",
#axis.text=element_blank(),
#axis.title=element_blank(),
#axis.title=element_text(size=14),
axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.5, colour = "black"),
legend.title = element_blank(),
legend.text = element_text(face = "italic"),
legend.key.height = unit(1, "mm"))+
guides(fill=guide_legend(nrow=2), size = .1)+
xlab("Patients")+
ylab("Relative abundance (%)")+
#facet_wrap(~AMRFam$CTRL, scales="free_x")+
theme(
strip.background = element_rect(
color="white", fill="white", size=1, linetype="solid"),
#strip.text.x = element_text(size = 12)
)
Bacteriophages
BPh.Exacerbation<-ggplot(data=BphageFam[which(BphageFam$Matching=="Matched"),],aes(x=ExacerbatorState, y=RPKM, fill=Virome))+
geom_bar(aes(), stat="identity", position = "fill") +
scale_fill_manual(values = c("#EBA5F3","#5CA5DB","#a3d9d2","#97809e","#eed799","#C6DFA6","#e3ce81","#026EB8","#06A955","#5D2E83","#2A2A73","#fc8403","#fc5017","#db6960","#B60004","#91CE59","#FFBC06","#3B3B3B","#026EB8","#06A955","#ffcccc","#2A2A73"))+
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(labels = c('N.Ex (0)','Ex (1-2)', 'F.Ex (3+)'))+
theme(legend.position="none",
#axis.text=element_blank(),
axis.title=element_blank(),
#axis.title=element_text(size=14),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.5, colour = "black"),
legend.title = element_blank(),
legend.text = element_text(face = "italic"))+
guides(fill=guide_legend(nrow=2), size = .1)+
xlab("")+
ylab("Relative abundance (%)")+
#facet_wrap(~BphageFamMT$Continent, scales="free_x")+
theme(
strip.background = element_rect(
color="white", fill="white", size=1, linetype="solid"),
strip.text.x = element_text(size = 12)
)
BPh.Exacerbation
BPh.FEV1<-ggplot(data=BphageFam[which(BphageFam$Matching=="Matched" & is.na(BphageFam$FEVfactor) == FALSE),],aes(x=FEVfactor, y=RPKM, fill=Virome))+
geom_bar(aes(), stat="identity", position = "fill") +
scale_fill_manual(values = c("#EBA5F3","#5CA5DB","#a3d9d2","#97809e","#eed799","#C6DFA6","#e3ce81","#026EB8","#06A955","#5D2E83","#2A2A73","#fc8403","#fc5017","#db6960","#B60004","#91CE59","#FFBC06","#3B3B3B","#026EB8","#06A955","#ffcccc","#2A2A73"))+
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(labels = c('>70%','50-70%','30-50%','<30%'))+
theme(legend.position="none",
#axis.text=element_blank(),
#axis.title=element_blank(),
#axis.title=element_text(size=14),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.5, colour = "black"),
legend.title = element_blank(),
legend.text = element_text(face = "italic"))+
guides(fill=guide_legend(nrow=2), size = .1)+
xlab("FEV1 (% predicted)")+
ylab("Relative abundance (%)")+
#facet_wrap(~BphageFamMT$Continent, scales="free_x")+
theme(
strip.background = element_rect(
color="white", fill="white", size=1, linetype="solid"),
strip.text.x = element_text(size = 12)
)
BPh.FEV1
BPh.Severity<-ggplot(data=BphageFam[which(BphageFam$Matching=="Matched"),],aes(x=Severity, y=RPKM, fill=Virome))+
geom_bar(aes(), stat="identity", position = "fill") +
scale_fill_manual(values = c("#EBA5F3","#5CA5DB","#a3d9d2","#97809e","#eed799","#C6DFA6","#e3ce81","#026EB8","#06A955","#5D2E83","#2A2A73","#fc8403","#fc5017","#db6960","#B60004","#91CE59","#FFBC06","#3B3B3B","#026EB8","#06A955","#ffcccc","#2A2A73"))+
scale_y_continuous(labels = scales::percent)+
theme(legend.position="none",
#axis.text=element_blank(),
#axis.title=element_blank(),
#axis.title=element_text(size=14),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.5, colour = "black"),
legend.title = element_blank(),
legend.text = element_text(face = "italic"))+
guides(fill=guide_legend(nrow=2), size = .1)+
xlab("Disease severity (BSI)")+
ylab("Relative abundance (%)")+
#facet_wrap(~BphageFamMT$Continent, scales="free_x")+
theme(
strip.background = element_rect(
color="white", fill="white", size=1, linetype="solid"),
strip.text.x = element_text(size = 12)
)
BPh.Severity
BPh.Aet<-ggplot(data=BphageFam[which(BphageFam$Matching=="Matched"),],aes(x=Aetiology_short, y=RPKM, fill=Virome))+
geom_bar(aes(), stat="identity", position = "fill") +
scale_fill_manual(values = c("#EBA5F3","#5CA5DB","#a3d9d2","#97809e","#eed799","#C6DFA6","#e3ce81","#026EB8","#06A955","#5D2E83","#2A2A73","#fc8403","#fc5017","#db6960","#B60004","#91CE59","#FFBC06","#3B3B3B","#026EB8","#06A955","#ffcccc","#2A2A73"))+
scale_x_discrete(labels = c('IP','PI', 'PTB', "other"))+
scale_y_continuous(labels = scales::percent)+
theme(legend.position="none",
#axis.text=element_blank(),
#axis.title=element_blank(),
#axis.title=element_text(size=14),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.5, colour = "black"),
legend.title = element_blank(),
legend.text = element_text(face = "italic"))+
guides(fill=guide_legend(nrow=2), size = .1)+
xlab("Aetiology")+
ylab("Relative abundance (%)")+
#facet_wrap(~BphageFamMT$Continent, scales="free_x")+
theme(
strip.background = element_rect(
color="white", fill="white", size=1, linetype="solid"),
strip.text.x = element_text(size = 12)
)
BPh.Aet
BPh.Country<-ggplot(data=BphageFam[which(BphageFam$Matching=="Matched"),],aes(x=Country, y=RPKM, fill=Virome))+
geom_bar(aes(), stat="identity", position = "fill") +
scale_fill_manual(values = c("#EBA5F3","#5CA5DB","#a3d9d2","#97809e","#eed799","#C6DFA6","#e3ce81","#026EB8","#06A955","#5D2E83","#2A2A73","#fc8403","#fc5017","#db6960","#B60004","#91CE59","#FFBC06","#3B3B3B","#026EB8","#06A955","#ffcccc","#2A2A73"))+
scale_y_continuous(labels = scales::percent)+
theme(legend.position="none",
#axis.text=element_blank(),
#axis.title=element_blank(),
#axis.title=element_text(size=14),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.5, colour = "black"),
legend.title = element_blank(),
legend.text = element_text(face = "italic"))+
guides(fill=guide_legend(nrow=2), size = .1)+
xlab("Geographic origin")+
ylab("Relative abundance (%)")+
#facet_wrap(~BphageFamMT$Continent, scales="free_x")+
theme(
strip.background = element_rect(
color="white", fill="white", size=1, linetype="solid"),
strip.text.x = element_text(size = 12)
)
BPh.Country
##PCOA Bacteriophage data [Contig-level]####
Master <-read.csv("../Data/R_input_files/Clinical_Bacteriophage.csv")
BPh_diversity <- Master[which(Master$Matching == "Matched"),] %>%
as_tibble() %>%
select(1:1,61:373) #for bactriophage taxonomy contig level
#select(1:1,48:61) #for bactriophage taxonomy family level
NAMES_list <- BPh_diversity$SampleID
main_data <- BPh_diversity[BPh_diversity$SampleID %in% NAMES_list, ]
BPh_diversity<-as.matrix(BPh_diversity)
rownames(BPh_diversity) <- BPh_diversity[,1]
BPh_diversity = as.data.frame(subset(BPh_diversity, select = -c(SampleID) ))
BPh_diversity[] <- lapply(BPh_diversity, as.numeric)
MasterVIZ = Master
BPhDiversityViz<-subset(MasterVIZ, MasterVIZ$Matching == "Matched")
BPhDiversityViz_Geo<-AMRDiversityViz
vegdist(BPh_diversity, "bray")-> Mbiome_PCoA
as.matrix(Mbiome_PCoA)->Mbiome_PCoA
BrayCurtMbiome=cmdscale(Mbiome_PCoA)
ordiplot (BrayCurtMbiome, display = 'species', type = 'text')
BCords<-scores(BrayCurtMbiome)
BCords<-(as.data.frame(t(BCords)))
BCords<-as.data.frame(t(BCords))
BPhDiversityViz_Geo$Dim1<-BCords$Dim1
BPhDiversityViz_Geo$Dim2<-BCords$Dim2
BPhDiversityViz_Geo$Country <- factor(BPhDiversityViz_Geo$Country, levels = c("SG", "KL", "DD", "MI"))
BPhDiversityViz_Geo$Aetiology_short<- factor(BPhDiversityViz_Geo$Aetiology_short, levels=c("idiopathic", "postInfect", "postTB", "other"))
gg <- data.frame(cluster=factor(BPhDiversityViz_Geo$Country), x=BPhDiversityViz_Geo$Dim1, y=BPhDiversityViz_Geo$Dim2, grp=BPhDiversityViz_Geo$Country)
# calculate group centroid locations
centroids <- aggregate(cbind(x,y)~cluster,data=gg,mean)
# merge centroid locations into ggplot dataframe
gg <- merge(gg,centroids,by="cluster",suffixes=c("",".centroid"))
# generate star plot...
PCA_Bph_Geo<-ggplot(gg) +
#scale_col_manual(values=c(16, 16, 16,16))+
scale_linetype_identity() +
geom_segment(aes(x=x.centroid, y=y.centroid, xend=x, yend=y, colour = cluster),alpha = 0.3)+
geom_point(aes(x=x,y=y, colour = cluster), size = 2, alpha = 0.5) + #can add ",shape = shape" in aes to introduce shape to points.
#geom_point(aes(x=x,y=y, colour = cluster, shape = shape), size = 2) +
geom_point(data=centroids, aes(x=x, y=y, color=cluster), size=5) +
geom_point(data=centroids, aes(x=x, y=y, color=cluster), size=5, shape = 13, colour = "black") +
scale_colour_manual(labels = c("SG", "KL", "DD", "MI", "Milan"), values = c("#CD2C1E","#F7CD46","#2A64B7","#91C55A" ))+
labs(colour="",
x = "PC 1 (23.8%)", y = "PC 2 (4.5%)")+
theme(legend.position="bottom",
legend.title = element_blank(),
axis.line = element_line(size = 0.5, colour = "black"),
panel.background = element_rect(fill = NA),
)+
scale_y_reverse()+
xlab("PC1 40.8%")+
ylab("PC2 21.1%")
PCA_Bph_Geo
adonis2(AMR_diversity ~ Country, data=BPhDiversityViz_Geo, method="bray", permutations=999)
adonis2(AMR_diversity ~ Aetiology_short, data=BPhDiversityViz_Geo, method="bray", permutations=999)
